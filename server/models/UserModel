const mongoose = require('mongoose')
const emailValidator = require('email-validator')
const bcrypt = require('bcrypt')
const SALT_ROUNDS = 12

const UserSchema = mongoose.Schema({

    username: {
        type: String,
        reuqired: true,
        trim: true,
        index: { uniqu: true },
        minlength: 3

    },

    email: {
        type: String,
        reuqired: true,
        trim: true,
        index: { uniqu: true },
        validate: emailValidator.validate,
        message: 'this should be a viald email'

    },
    password: {
        type: String,
        reuqired: true,
        trim: true,
        index: { uniqu: true },
        minlength: 8

    }

},
    { timestamps: true },);

UserSchema.pre('save', async function (next) {
    const user = this
    if (!user.isModified('password')) {
        next()
    }
    user.password = await bcrypt.hash(user.password, SALT_ROUNDS)
    return next()
})


UserSchema.methods.comparePassword = async function (input) {
    return bcrypt.compare(input, this.password)
}

module.exports = mongoose.model('User', UserSchema)